print("hi")
setwd("~/Documents/machineLearning/MachineLearningSpecialization/Machine Learning A-Z/Part 2 - Regression/Section 4 - Simple Linear Regression")
dataset = read.csv('Salary_Data.csv')
View(dataset)
View(dataset)
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
View(test_set)
View(training_set)
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
## geting linear model info
summary(regressor)
## Predict the test set results
y_pred = predict(regressor, newdata = test_set)
y_pred
install.packages('ggplot2')
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$YearsExperience),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience , y = predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$YearsExperience),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience , y = predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience , y = predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience , y = predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('Salary vs Experience (Test set)') +
xlab('Years of experience') +
ylab('Salary')
setwd("~/Documents/machineLearning/MachineLearningSpecialization/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression")
setwd("~/Documents/machineLearning/MachineLearningSpecialization/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression")
# Data Preprocessing Template
# Importing the dataset
dataset = read.csv('50-Startups.csv')
# Importing the dataset
dataset = read.csv('50-Startups.csv')
View(dataset)
View(dataset)
setwd("~/Documents/machineLearning/MachineLearningSpecialization/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression")
# we need to resolv Dummy data
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California'),
labels = c(1, 2))
View(dataset)
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(test_set)
View(training_set)
View(test_set)
View(training_set)
View(test_set)
regressor = lm(formula = Profit ~ .,
data = training_set)
summary()
summary(regressor)
## Predict the Test set Results
y_pred = predict(regressor , newdata = test_set)
summary()
y_pred
View(dataset)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = dataset)
summary(regressor)
## Eliminate all the variables higher that 5% in P > SL
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend + State,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend ,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend,
data = dataset)
summary(regressor)
